apply plugin: 'com.android.application'
apply plugin: 'cn.werouter.plugin'

def config = rootProject.ext
String moduleStr = rootProject.ext.getModuleConfiog
def modules = moduleStr.split(",")
System.out.println("---------${modules}----------")

android {
    compileSdkVersion config.app.compileSdkVersion
    defaultConfig {
        applicationId config.app.applicationId
        minSdkVersion config.app.minSdkVersion
        targetSdkVersion config.app.targetSdkVersion
        versionCode config.appVersion.versionCode
        versionName config.appVersion.versionName

        buildConfigField("String", "moduleName", "\"" + getName() + "\"")
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [WEROUTER_MODULE_NAME: project.getName()]
            }
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    dexOptions {
        javaMaxHeapSize '4g'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    if (null != modules && modules.size() > 0) {
        modules.each { name ->
            implementation project(":${name}")
        }
    }
    implementation project(config.baseRes)

    //内存泄漏检测
    debugImplementation config.leakCanary.debug
    releaseImplementation config.leakCanary.release
    //路由
    annotationProcessor project(':router:werouter-compiler')
    //ButterKnife
    annotationProcessor config.bufferkinfe.annotation

}
